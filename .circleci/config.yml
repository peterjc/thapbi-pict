# This is a special configuration file to run tests on Circle-CI via
# GitHub notifications when changes are committed.
#
# This file is not intended for end users of the tool.

version: 2
jobs:
  build:
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - run:
          name: Conda and Dependencies
          command: |
            # Move this grep into pre-commit setup:
            grep -v '^>' database/Phytophthora_ITS1_curated.fasta  | LC_ALL=C sort -c -f
            conda config --set always_yes yes --set changeps1 no --set channel_priority strict
            conda update -q conda
            conda config --add channels defaults
            conda config --add channels bioconda
            conda config --add channels conda-forge
            conda info -a
            conda create -q -n testing python=3.8 mamba
            source activate testing
            python --version
            # For installing the Python requirements either conda or pip should work,
            # but conda preferable if there are packages with C code but no wheel
            # python -m pip install -r requirements.txt
            mamba install curl --file requirements.txt --file requirements-ext.txt
            python -m pip install -U pip setuptools wheel build
      - run:
          name: Installation
          command: |
            source activate testing
            echo "Bootstrapping to build DB"
            python -m pip install -e .
            rm -rf dist/* thapbi_pict/ITS1_DB.sqlite
            mv database/ITS1_DB.fasta database/expected_DB.fasta
            cd database
            bash build_ITS1_DB.sh
            cd ..
            echo "Confirming database/ITS1_DB.fasta is unchanged"
            diff database/expected_DB.fasta  database/ITS1_DB.fasta
            cp database/ITS1_DB.sqlite thapbi_pict/ITS1_DB.sqlite
            chmod a-w thapbi_pict/ITS1_DB.sqlite
            echo "DB ready, uninstalling THAPBI PICT..."
            python -m pip uninstall --yes thapbi_pict
            echo "Building tar-ball and then wheel"
            python -m build
            echo "Installing our wheel..."
            cd dist
            python -m pip install --force-reinstall thapbi_pict-*.whl
            cd ..
            echo "THAPBI PICT should now be installed"
            thapbi_pict -v
      - run:
          name: Test
          command: |
            source activate testing
            # Unpack the tests from the sdist tar-ball
            tar --wildcards '*/scripts/*' -zxvf dist/thapbi_pict-*.tar.gz
            tar --wildcards '*/tests/*' -zxvf dist/thapbi_pict-*.tar.gz
            tar --wildcards '*/examples/*' -zxvf dist/thapbi_pict-*.tar.gz
            tar --wildcards '*/database/*' -zxvf dist/thapbi_pict-*.tar.gz
            cd thapbi_pict-*/
            # Run the tests (and confirm the tar-ball is complete)
            tests/run_tests.sh
