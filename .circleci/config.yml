# This is a special configuration file to run tests on Circle-CI via
# GitHub notifications when changes are committed.
#
# This file is not intended for end users of the tool.

version: 2
jobs:
  build:
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - run:
          name: Setup Conda
          command: |
            conda config --set always_yes yes --set changeps1 no --set channel_priority strict
            conda update -q conda
            # In future point at project-env.yml file here:
            conda create -q -n myenv python=3.7
            source activate myenv
            python --version
            conda config --add channels defaults
            conda config --add channels bioconda
            conda config --add channels conda-forge
            conda info -a
      - run:
          name: Whitespace checks
          command: |
            if grep -P '\t' *.md */*.md */*/*.md; then echo 'Tabs are bad, please use four spaces in Markdown files.'; false; fi
            if grep -P '\t' *.yml .circleci/*.yml ; then echo 'Tabs are bad, please use four spaces in Yaml files.'; false; fi
            if grep -P '\t' */*.py; then echo 'Tabs are bad, please use four spaces in Python files.'; false; fi
            if grep -n -r '[[:blank:]]$' *.md */*.md */*/*.md; then echo 'Please remove trailing whitespace in Markdown files.'; false; fi
            if grep -n -r '[[:blank:]]$' *.yml .circleci/*.yml ; then echo 'Please remove trailing whitespace in Yaml files.'; false; fi
            if grep -n -r '[[:blank:]]$' */*.py; then echo 'Please remove trailing whitespace in Python files.'; false; fi
      - run:
          name: Python and RST checks
          command: |
            pip install --upgrade pip setuptools
            pip install black
            black --check .
            pip install flake8==3.6 flake8-blind-except flake8-docstrings flake8-rst-docstrings restructuredtext-lint flake8-bugbear pygments
            flake8 .
            restructuredtext-lint *.rst
      - run:
          name: Installation
          command: |
            conda install --file requirements-ext.txt
            # Also installing the Python requirements here - pip should do it, but not all with C code have wheels
            conda install --file requirements.txt
            rm -rf dist/* thapbi_pict/ITS1_DB.sqlite
            sqlite3 thapbi_pict/ITS1_DB.sqlite < database/ITS1_DB.sql
            chmod a-w thapbi_pict/ITS1_DB.sqlite
            python setup.py sdist --formats=gztar
            python setup.py bdist_wheel
            pip install dist/thapbi_pict-*.whl
      - run:
          name: Test
          command: |
            # Unpack the tests from the sdist tar-ball
            tar --wildcards '*/tests/*' -zxvf dist/thapbi_pict-*.tar.gz
            tar --wildcards '*/database/*' -zxvf dist/thapbi_pict-*.tar.gz
            cd thapbi_pict-*/
            # Run the tests (and confirm the tar-ball is complete)
            tests/run_tests.sh
